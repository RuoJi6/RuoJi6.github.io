[{"title":"测绘语法收集资产","path":"/posts/15280.html","content":"在上一篇关于【关于快速打点思考】中，写到了关于测绘收集资产，这里我们详细的展开讲讲，以FOFA举例，其它的测绘语法大同小异。 FOFA常用搜索语法123456789101112icp=&quot;备案号&quot; # icp=&quot;京ICP证030173号&quot;domain=&quot;域名&quot; # icp=&quot;baidu.com&quot;cert.subject.cn=&quot;证书持有者的通用名称&quot; # cert.subject.cn=&quot;baidu.com&quot;cert.subject.org=&quot;证书持有者的组织&quot; # cert.subject.org=&quot;Beijing Baidu Netcom Science Technology Co., Ltd&quot;title=&quot;beijing&quot; # 网页标题body=&quot;网络空间测绘&quot;\t# 网页正文after=&quot;2024-01-01&quot;\t# 筛选2024-01-01之后有更新的资产before=&quot;2024-12-01&quot;\t# 筛选2024-12-0之前有更新的资产host=&quot;.fofa.com&quot; # 通过主机名进行查询cert=&quot;xxxxx&quot; # 证书序列号查询&amp;&amp; #逻辑与|| #逻辑或 SSL证书SLL是很多人打点的时候忽略掉的一点，为什么SSL证书可以搜索到更加隐蔽的资产？因为网站运维人员在部署SLL证书的时候，对IP地址进行了部署，导致了有些网站访问会出现下面情况，因为SSL证书与域名对不上或者是过期导致，但是我们通过FOFA测绘可以通过证书搜索到绑定证书的资产。 SSL证书我们需要提取一下三点： 证书持有者的通用名称。 证书持有者的组织。 证书序列号。 123cert.subject.cn=&quot;baidu.com&quot; # 证书持有者的通用名称cert.subject.org=&quot;Beijing Baidu Netcom Science Technology Co., Ltd&quot; # 证书持有者的组织cert=&quot;24217219254604001662049442027&quot; # 证书序列号十进制【去冒号查询】 结果： 编写自己的脚本在攻防时候，想要快人一步进行打点，在上一篇文章中【关于快速打点思考】，笔者是将测绘资产进行处理，而读者也可以自行处理，通过FOFA API接口进行操作，下面是搜索集合语句。 常用语法： 查询筛选2024-01-01之后有更新的资产。 1icp=&quot;备案号&quot; || domain=&quot;域名&quot; || cert.subject.cn=&quot;证书持有者的通用名称&quot; || cert.subject.org=&quot;证书持有者的组织&quot; || title=&quot;beijing&quot; || body=&quot;网络空间测绘&quot; || host=&quot;.fofa.com&quot; || cert=&quot;xxxxx&quot; &amp;&amp; after=&quot;2024-01-01&quot; 查询筛选2024-01-01之前有更新的资产 1icp=&quot;备案号&quot; || domain=&quot;域名&quot; || cert.subject.cn=&quot;证书持有者的通用名称&quot; || cert.subject.org=&quot;证书持有者的组织&quot; || title=&quot;beijing&quot; || body=&quot;网络空间测绘&quot; || host=&quot;.fofa.com&quot; || cert=&quot;xxxxx&quot; &amp;&amp; before=&quot;2024-01-01&quot; 注意：关于测绘收录时间年限，每个测绘平台定义不一样，需要读者自行测试。","tags":["资产测绘"],"categories":["信息收集"]},{"title":"关于快速打点思考","path":"/posts/24712.html","content":"项目：RuoJi6&#x2F;DarKnuclei 0.1 思路在前期怎么样对目标进行快速的渗透测试？通过测绘资产快速的进行收集互联网暴露资产，联动指纹识别以及联动扫描工具进行打点。 0.2 难点在攻防或者是渗透测试的时候，组织方给的资产大致分为： 公司名单表 一堆杂乱资产 所以，在编写项目的时候也需要考虑到这两点问题，公司名单列表通过测绘引擎进行处理，一堆杂乱资产通过识别为IP以及WEB进行处理。 0.3 解决0.3.1 测绘语法多角度收集测绘语法如下，同时使用或逻辑进行处理资产。【关于测绘语法，请看下篇文章】 ICP备案号 域名 IP地址 host信息 网站title和body 一年前后数据 SSL证书 公用名 组织 序列号 0.3.2 处理资产在攻防期间，组织方给的目标有可能是： 12345http://baidu.comhttp://baidu.com:1122https://192.168.23.1:8899192.168.23.1baidu.com 进行测试的时候，就需要对资产进行处理，才能进行下一步扫描。 1234567891011121314151617181920212223http://baidu.com http://baidu.com:1122https://192.168.23.175:8899http://baidu.com/asdxasd/asd192.168.23.1conasdasd.com192.168.123.175:1122处理为：http://baidu.com http://baidu.com/asdxasd/asdhttp://baidu.com:1122https://192.168.23.175:8899http://conasdasd.comhttps://conasdasd.comhttps://192.168.124.175:8899http://192.168.123.175:1122https://192.168.123.175:1122192.168.123.175192.168.23.1192.168.124.175 其中，处理分为两部分：WEB，IP。 0.4 扫描处理0.4.1测绘引擎处理得到测绘结果中的IP资产，使用gogo进行资产扫描。 将测绘结果去重，使用observer_ward进行指纹探针，找到对应的指纹使用nuclei使用对应的POC进行扫描。 0.4.2 杂乱资产处理根据杂乱资产：我们可以分成两种情况需要扫描： WEB资产【测绘资产】 IP资产 其中IP需要进行端口扫描，才能进行下一步操作。 资产识别→WEB等待[gogo探测结果] 资产识别→IP→gogo端口探测→收集WEB资产[包括一开始收集的结果]→指纹识别→漏洞扫描 资产识别，分为两种资产，其中IP资产使用gogo自带指纹识别以及漏洞探针进行扫描，将带有WEB的资产和首次识别到的WEB资产进行合并，使用observer_ward进行指纹探针，找到对应的指纹使用nuclei使用对应的POC进行扫描。 0.5 优缺点0.5.1 优点 使用多个测绘语句结合，保证资产结构最大化。 针对杂乱资产，不遗留资产。 0.5.1 缺点需要人进行维护指纹以及POC保证是最新的，需要有一套漏洞运营流程，针对攻防出现的高危POC进行维护更新，这个也是我团队所在做的事情，需要日积月累才能有成效。 0.6 后续思考 针对红队C2服务器进行指纹识别。 C2服务器默认特征，vshell一键上线默认端口探测，以及红队扫描器WEB地址识别，以及yakit，和JNDI注入工具端口识别。 针对防守方蜜罐进行识别。 蜜罐的JS文件，或者是蜜罐的一些特征，又或者是，探测首个发包之后，有没有请求一些敏感域名：qq，baidu等。","tags":["红队"],"categories":["信息收集"]},{"title":"Hello World","path":"/posts/16108.html","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"},{"title":"about","path":"/about/index.html","content":"弱鸡"}]